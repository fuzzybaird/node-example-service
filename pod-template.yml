metadata:
  labels:
    slave-pod-type: default-node-build
spec:
  containers:
  - name: jnlp
    env:
    - name: RUNNING_IN
      value: jnlp
    resources:
      requests:
        memory: "1024Mi"
        cpu: "500m"
      limits:
        memory: "2048Mi"
        cpu: "1000m"
    volumeMounts:
      - name: dockersock
        readOnly: false
        mountPath: "/var/run/docker.sock"

  - name: node
    image: node:11.13.0-alpine
    env:
    - name: RUNNING_IN
      value: node
    command:
    - cat
    tty: true
    resources:
      requests:
        memory: "512Mi"
        cpu: "500m"
      limits:
        memory: "1024Mi"
        cpu: "1000m"
    volumeMounts:
      - name: dockersock
        readOnly: false
        mountPath: "/var/run/docker.sock"

  - name: docker
    image: docker:18.02
    env:
    - name: RUNNING_IN
      value: docker
    command:
    - cat
    tty: true
    resources:
      requests:
        memory: "1024Mi"
        cpu: "500m"
      limits:
        memory: "2048Mi"
        cpu: "1000m"
    volumeMounts:
      - name: dockersock
        readOnly: false
        mountPath: "/var/run/docker.sock"

  - name: helm
    image: ibmcom/k8s-helm:v2.6.0
    command:
    - cat
    tty: true
    env:
    - name: RUNNING_IN
      value: helm
    volumeMounts:
      - name: dockersock
        readOnly: false
        mountPath: "/var/run/docker.sock"

  - name: aws-cli
    image: mesosphere/aws-cli
    command:
    - cat
    tty: true
    env:
    - name: RUNNING_IN
      value: aws-cli
    volumeMounts:
      - name: dockersock
        readOnly: false
        mountPath: "/var/run/docker.sock"

  volumes:
  - name: dockersock
    hostPath:
      path: /var/run/docker.sock